{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Table of Contents","text":"<ul> <li>Main Installation Guide</li> <li>In-Depth Explanations<ul> <li>opencv &amp; apriltags</li> <li>uwv kalman filters</li> </ul> </li> <li>Official Ubuntu ISO</li> </ul>"},{"location":"setup/","title":"Instructions for a new VM","text":""},{"location":"setup/#preface","title":"Preface","text":"<p>Check out ROCK's supported platforms on the official rock-core repo. It seems the latest master-22.06 is only supported on Ubuntu 20.04 (Focal Fossa)</p> <p>Also refer to https://www.rock-robotics.org/ to understand more about using commands in the ROCK framework.</p> <p>Instead of grouping all the required packages you may need in one section, I want to keep them separate so someone setting this up will understand the sequence in which certain dependencies are needed</p>"},{"location":"setup/#1-standard-initialization-of-new-linux-os","title":"(1) Standard initialization of new Linux OS","text":"<ul> <li>Use any method to access Ubuntu 20.04</li> <li><code>sudo apt update</code></li> <li><code>sudo apt upgrade</code></li> </ul>"},{"location":"setup/#install-ruby","title":"Install Ruby","text":"<p><code>sudo apt-get install ruby ruby-dev wget build-essential</code></p>"},{"location":"setup/#2-installing-rock-for-ubuntu-2004","title":"(2) Installing Rock for Ubuntu 20.04","text":"<p>Make a 'rock' directory anywhere. I chose to make it in the home directory</p> <pre><code>cd;\nmkdir rock; cd rock;\nwget -q https://raw.githubusercontent.com/rock-core/buildconf/master/bootstrap.sh\nsh bootstrap.sh\n</code></pre> <ul> <li>add env.sh to .bashrc <code>source ~/[user]/rock/env.sh</code></li> </ul> <p>Inside your 'rock' directory,</p> <pre><code>cd ~/rock\naup\namake\n</code></pre> <p><code>aup</code> fetches dependencies that were specified in your autoproject's manifest file</p> <p><code>amake</code> then builds the framework</p>"},{"location":"setup/#install-mtk-and-pose_estimation-dependencies","title":"Install MTK and pose_estimation dependencies","text":"<p>These base libraries are needed for the computation needed for the Kalman Filter</p> <pre><code>sudo apt install libsuitesparse-dev libeigen3-dev libboost-all-dev\nsudo apt-get install libgdal-dev\n</code></pre> <p>in autoproj, modify manifest. Add this after \"rock.core\" in layout. Be careful of indentation.</p> <pre><code>- slam/mtk\n- slam/pose_estimation\n- slam/uwv_kalman_filters\n- slam/orogen/uwv_kalman_filters\n</code></pre> <p>aup, amake to check</p>"},{"location":"setup/#3-replacing-fetched-libraries-that-contain-errors","title":"(3) Replacing fetched libraries that contain errors","text":"<p>Libraries: <code>perception/orogen/apriltags</code> and <code>slam/orogen/uwv_kalman_filters</code> both have build errors. You can either refer to the in-depth documentation to fix them yourself or clone from my repos where I fixed the build errors from Tom Creutz's latest repos</p>"},{"location":"setup/#perceptionorogenapriltags","title":"perception/orogen/apriltags","text":"<p>https://github.com/con169/perception-orogen-apriltags</p> <p>Refer to full documentation fix here for more in depth instructions and explanation. Otherwise, follow the readme seen on this repo.</p>"},{"location":"setup/#slamorogenuwv_kalman_filters","title":"slam/orogen/uwv_kalman_filters","text":"<p>https://github.com/con169/slam-orogen-uwv_kalman_filters</p> <p>Same instructions, replace folder and amake.</p> <p>Refer to more in-depth documentation for specific changes</p> <p>amake in <code>~/rock/</code> and should be done</p>"},{"location":"side_qol/","title":"QOL Setup","text":""},{"location":"side_qol/#setup-git","title":"setup git","text":"<pre><code># Configure Git identity\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your_email@example.com\"\n\n# Generate SSH key\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n\n# Start SSH agent and add key\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n\n# Copy public key and add to GitHub\ncat ~/.ssh/id_ed25519.pub\n</code></pre>"},{"location":"side_qol/#openssh","title":"openssh","text":"<p>https://documentation.ubuntu.com/server/how-to/security/openssh-server/index.html</p> <pre><code>sudo apt install openssh-server\nsudo systemctl enable ssh\nsudo systemctl start ssh\n</code></pre>"},{"location":"In-Depth/opencv_apriltags/","title":"Opencv apriltags","text":"<ul> <li>You can either follow the instructions below or clone from my repo</li> </ul> <p>~/dev/rock <code>autoproj show opencv</code></p> <p>check if opencv4 is installed, if not do: <code>sudo apt update</code> <code>sudo apt install libopencv-dev</code></p> <p>Not needed but you can add opencv to the layout (i forgot how i know this is the format to add to layout)</p> <pre><code>Layout:\n    - opencv\n</code></pre> <p>change folder rock/install/include/apriltag to rock/install/include/apriltags</p>"},{"location":"In-Depth/opencv_apriltags/#orogenapriltagsapriltagsorogen","title":"orogen/apriltags/apriltags.orogen","text":"<ul> <li>using_library<ul> <li>apriltags \u2192 apriltag</li> <li>opencv \u2192 opencv4</li> </ul> </li> </ul>"},{"location":"In-Depth/opencv_apriltags/#orogenapriltagsapriltagstypeshpp","title":"orogen/apriltags/apriltagsTypes.hpp","text":"<ul> <li>change the family_t enum<ul> <li>TAG25H7 \u2192 TAG16H5</li> <li>remove TAG36ARTOOLKIT</li> </ul> </li> </ul>"},{"location":"In-Depth/opencv_apriltags/#orogenapriltagstaskstaskhpp","title":"orogen/apriltags/tasks/task.hpp","text":"<p>remove the includes to tag25h7 and tag36artoolkit add <code>#include apriltags/tag16h5</code></p>"},{"location":"In-Depth/opencv_apriltags/#orogenapriltagstaskstaskcpp","title":"orogen/apriltags/tasks/task.cpp","text":"<p>configureHook() - change case TAG25H7 to case TAG16H5 - tag16h5_create() - comment out tag36artoolkit case</p> <ul> <li>comment out refine_decode and refine_pose<ul> <li>they don't exist</li> </ul> </li> </ul> <p>cleanupHook() - same as before for configureHook()</p> <p>updateHook()</p> <p>the apriltag_detection struct does not have properties: d, h, and goodness anymore. Change the printf to the following:</p> <pre><code>if (!conf.quiet)\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 printf(\"detection %3d: id %-4d, hamming %d, margin %8.3f\\n\",\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 i, det-&gt;id, det-&gt;hamming, det-&gt;decision_margin);\n</code></pre> <p></p> <p>At this point, try amake so you can see the errors with opencv</p> <p>OpenCV uses a different variable for the line parameter (POST v4.0.0) CV_AA is deprecated, in version 4+ they use cv::line_AA</p> <p>replace CV_AA with cv::LINE_AA</p> <ul> <li>These changes are needed in:<ul> <li>void Task::draw</li> <li>void Task::draw3dCube</li> <li>void Task::draw3dAxis</li> </ul> </li> </ul> <p>These should be all of the changes needed to build rock and now you can simple <code>amake</code> inside perception/orogen/apriltags or /rock!</p>"},{"location":"In-Depth/orogen_uwv_kalman_filters/","title":"Orogen uwv kalman filters","text":"<p>These steps are basically 1:1 with notes provided by Drew</p>"},{"location":"In-Depth/orogen_uwv_kalman_filters/#replace-with-tom-creutzs-versions-in","title":"replace with Tom Creutz's versions in:","text":"<p>-/home/vboxuser/rock/slam/uwv_kalman_filters with: https://github.com/tomcreutz/slam-uwv_kalman_filters.git</p> <p>-/home/vboxuser/rock/slam/orogen/uwv_kalman_filters with: https://github.com/tomcreutz/slam-orogen-uwv_kalman_filters.git</p>"},{"location":"In-Depth/orogen_uwv_kalman_filters/#fix-time-unit-issues","title":"fix time unit issues","text":"<ul> <li> <p>/home/vboxuser/Desktop/rock/slam/orogen/uwv_kalman_filters/tasks/PoseEstimator.cpp</p> <ul> <li>replace line 419:</li> <li>base::Time current_sample_time = base::Time::fromMicroseconds(pose_filter-&gt;getLastMeasurementTime());</li> <li>with: base::Time current_sample_time = pose_filter-&gt;getLastMeasurementTime();</li> </ul> </li> <li> <p>/home/vboxuser/Desktop/rock/slam/orogen/uwv_kalman_filters/tasks/VelocityProvider.cpp</p> <ul> <li>replace old 247: base::Time current_sample_time = base::Time::fromMicroseconds(velocity_filter-&gt;getLastMeasurementTime());</li> <li>with: base::Time current_sample_time = velocity_filter-&gt;getLastMeasurementTime();</li> </ul> </li> </ul> <p>amake</p>"}]}